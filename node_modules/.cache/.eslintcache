[{"C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\index.js":"1","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\App.js":"2","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\reportWebVitals.js":"3","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\Navbar.js":"4","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\Textform.js":"5","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\About.js":"6","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\Alert.js":"7"},{"size":535,"mtime":1697701283785,"results":"8","hashOfConfig":"9"},{"size":3262,"mtime":1698040796344,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1697701284377,"results":"11","hashOfConfig":"9"},{"size":2302,"mtime":1698040740616,"results":"12","hashOfConfig":"9"},{"size":1854,"mtime":1697958728314,"results":"13","hashOfConfig":"9"},{"size":4110,"mtime":1698040591149,"results":"14","hashOfConfig":"9"},{"size":387,"mtime":1697957962681,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1tyghf2",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\index.js",[],[],["41"],"C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\App.js",["42","43"],[],"import './App.css';\nimport React, { useState } from 'react';\nimport NavBar from './components/Navbar';\nimport TextForm from './components/Textform';\nimport About from './components/About';\nimport Alert from './components/Alert';\n{/*import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";*/}\n\n//function myfunc(){\n//  const val = document.getElementById(\"txt\").value \n//  console.log(val)\n//}\n\n\nfunction App() {\n  //const myfunc = (event) => {\n    //event.preventDefault(); // Prevent the default form submission behavior\n    //console.log('Search button clicked'); // Log a message to the console\n  //};\n  //let name =\"Hello World\"\n\n  const [mode, setMode] = useState('dark');\n  const [text, setText] = useState('Enable Light Mode');\n\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    },3000);\n  }\n\n  const onChange = ()=>{\n    if(mode==='dark'){\n      setMode('light');\n      setText('Enable Dark Mode');\n      document.body.style.backgroundColor=\"white\"; \n\n      showAlert('Light Mode Initiated Successfully','success');\n    }\n    else{\n      setMode('dark');\n      setText('Enable Light Mode');\n      document.body.style.backgroundColor=\"#042743\";\n      showAlert('Dark Mode Initiated Successfully','success');\n    }\n  }\n\n    const [inputVal,setInput] = useState('');     \n    const [word, wordCount] = useState(0);\n    const [lett, charCount]= useState(0);\n\n    const change = (event)=> {\n        //let val = event.target.value;\n        //setInput(val.toUpperCase());\n        let val = event.target.value\n        setInput(event.target.value);\n        \n        let result = val.split(' ').filter(word => word !== '').length;\n        wordCount(result);\n\n        let character = val.trim().length-result+1;\n        charCount(character);\n\n    }\n    const convertToUpper = ()=>{\n        setInput(inputVal.toUpperCase());\n        setAlert({\n          msg:\"Converted To Upper Case\",\n          type:\"success\"\n        })\n    }\n\n    const convertToLower = ()=>{\n        setInput(inputVal.toLowerCase());   \n        setAlert({\n          msg:\"Converted To Lower Case\",\n          type:\"success\"\n        });     \n    }\n    const clearText = ()=>{\n        setInput('');\n        wordCount(0);\n        charCount(0);\n\n        setAlert({\n          msg:\"All text are cleared\",\n          type:\"success\"\n        });\n    }\n  return(  \n    <div>\n      {/*<Router>*/}\n<NavBar title=\"MyTextutil\" mod={mode} text={text} onChange={onChange}/>\n<Alert mode={alert}></Alert>\n<div className=\"container\">\n{/*<Routes>\n          <Route path=\"/about\" element={<About/>}/>\n          <Route path=\"/\" element={<TextForm heading=\"Operation Over Text\" mode={mode} inputVal={inputVal} word={word} lett={lett} change={change} clearText={clearText} convertToLower={convertToLower} convertToUpper={convertToUpper} />}>\n          </Route>\n  </Routes>*/}\n<TextForm heading=\"Operation Over Text\" mode={mode} inputVal={inputVal} word={word} lett={lett} change={change} clearText={clearText} convertToLower={convertToLower} convertToUpper={convertToUpper} />\n{/**<About/>*/}\n</div>\n{/*</Router>*/}\n</div>\n  );\n}\n\n\n\nexport default App;\n","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\reportWebVitals.js",[],[],"C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\Navbar.js",["44"],[],"import React from \"react\";\r\n{/*import {\r\n    Link\r\n  } from \"react-router-dom\";*/}\r\n\r\nfunction NavBar(prop){\r\n    return(\r\n        <nav className={`navbar navbar-expand-lg navbar-${prop.mod} bg-${prop.mod}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{prop.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n    \r\n      <form className=\"d-flex\">\r\n        {/*<input id=\"txt\" className=\"form-control me-2\" type=\"search\" placeholder=\"Enter Text Value\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Submit</button>*/}\r\n        <input  onChange={prop.onChange} type=\"checkbox\" className=\"btn-check\" id=\"btn-check\" autocomplete=\"off\"/>\r\n        <label  className=\"btn btn-primary\" for=\"btn-check\">{prop.text}</label>\r\n    </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    );\r\n}\r\n\r\n\r\nNavBar.defaultProps = {\r\n    title:\"Hello\"\r\n}\r\nexport default NavBar;","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\Textform.js",["45","46"],[],"import { useState } from \"react\";\r\n\r\nexport default function TextForm(prop){\r\n    {/*const [inputVal,setInput] = useState('');     \r\n    const [word, wordCount] = useState(0);\r\n    const [lett, charCount]= useState(0);\r\n\r\n    const change = (event)=> {\r\n        //let val = event.target.value;\r\n        //setInput(val.toUpperCase());\r\n        let val = event.target.value\r\n        setInput(event.target.value);\r\n        \r\n        let result = val.split(' ').filter(word => word !== '').length;\r\n        wordCount(result);\r\n\r\n        let character = val.trim().length-result+1;\r\n        charCount(character);\r\n\r\n    }\r\n    const convertToUpper = ()=>{\r\n        setInput(inputVal.toUpperCase());\r\n    }\r\n\r\n    const convertToLower = ()=>{\r\n        setInput(inputVal.toLowerCase());        \r\n    }\r\n    const clearText = ()=>{\r\n        setInput('');   \r\n        wordCount(0);\r\n        charCount(0);\r\n    }*/}\r\n    const fontStyle = {color:prop.mode===\"dark\"?\"white\":\"black\"};\r\n    return(\r\n        <>\r\n        <h1 style={{color:prop.mode===\"dark\"?\"white\":\"black\"}}>{prop.heading}</h1>\r\n        <div className=\"container mb-3\">\r\n        <textarea className=\"form-control\" style={{backgroundColor:prop.mode===\"dark\"?\"white\":\"grey\"}} placeholder=\"Leave a comment here\" id=\"Enter Your Text\" rows={8} value={prop.inputVal} onChange={prop.change}></textarea>\r\n      </div>\r\n      <button className=\"UpperCase\" onClick={prop.convertToUpper}>Covert To Upper Case</button>\r\n      <button className=\"LowerCase\" onClick={prop.convertToLower}>Covert To Lower Case</button>\r\n      <button className=\"ClearText\" onClick={prop.clearText}> Clear Text </button>\r\n      <div className=\"container my-3\">\r\n        <h2 style = {fontStyle}> Your Text Summary</h2>\r\n        <p style = {fontStyle}>{prop.word} words, {prop.lett} characters</p>\r\n      </div>\r\n      </>\r\n\r\n    );\r\n}","C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\About.js",[],[],"C:\\Users\\umend\\OneDrive\\Documents\\Tutorials\\myfirst\\src\\components\\Alert.js",[],[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":7,"column":1,"nodeType":"55","messageId":"56","endLine":12,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":2,"column":1,"nodeType":"55","messageId":"56","endLine":4,"endColumn":32},{"ruleId":"49","severity":1,"message":"57","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":18},{"ruleId":"53","severity":1,"message":"58","line":4,"column":5,"nodeType":"55","messageId":"59","endLine":32,"endColumn":9},"no-new-object",["60"],"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","Nested block is redundant.","redundantNestedBlock","no-object-constructor"]