{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umend\\\\OneDrive\\\\Documents\\\\Tutorials\\\\myfirst\\\\src\\\\components\\\\Textform.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(prop) {\n  _s();\n  let [inputVal, setInput] = useState('');\n  const [word, wordCount] = useState(0);\n  const [lett, charCount] = useState(0);\n  const change = event => {\n    //let val = event.target.value;\n    //setInput(val.toUpperCase());\n    let val = event.target.value;\n    setInput(event.target.value);\n    let result = val.split(' ').filter(word => word !== '').length;\n    wordCount(result);\n    let character = val.trim().length - result + 1;\n    charCount(character);\n  };\n  const convertToUpper = () => {\n    setInput(inputVal.toUpperCase());\n  };\n  const convertToLower = () => {\n    setInput(inputVal.toLowerCase());\n  };\n  const clearText = () => {\n    setInput('');\n    //wordCount(0);\n    //charCount(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: prop.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        placeholder: \"Leave a comment here\",\n        id: \"Enter Your Text\",\n        rows: 8,\n        value: inputVal,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"UpperCase\",\n      onClick: convertToUpper,\n      children: \"Covert To Upper Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LowerCase\",\n      onClick: convertToLower,\n      children: \"Covert To Lower Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ClearText\",\n      onClick: clearText,\n      children: \" Clear Text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [word, \" words, \", lett, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"IbR9lf8ookmfNdZ7osyvc7SO8uI=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","prop","_s","inputVal","setInput","word","wordCount","lett","charCount","change","event","val","target","value","result","split","filter","length","character","trim","convertToUpper","toUpperCase","convertToLower","toLowerCase","clearText","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","id","rows","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umend/OneDrive/Documents/Tutorials/myfirst/src/components/Textform.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function TextForm(prop){\r\n    let [inputVal,setInput] = useState('');     \r\n    const [word, wordCount] = useState(0);\r\n    const [lett, charCount]= useState(0);\r\n    const change = (event)=> {\r\n        //let val = event.target.value;\r\n        //setInput(val.toUpperCase());\r\n        let val = event.target.value\r\n        setInput(event.target.value);\r\n        \r\n        let result = val.split(' ').filter(word => word !== '').length;\r\n        wordCount(result);\r\n\r\n        let character = val.trim().length-result+1;\r\n        charCount(character);\r\n\r\n    }\r\n    const convertToUpper = ()=>{\r\n        setInput(inputVal.toUpperCase());\r\n    }\r\n\r\n    const convertToLower = ()=>{\r\n        setInput(inputVal.toLowerCase());        \r\n    }\r\n    const clearText = ()=>{\r\n        setInput('');\r\n        //wordCount(0);\r\n        //charCount(0);\r\n    }\r\n    return(\r\n        <>\r\n        <h1>{prop.heading}</h1>\r\n        <div className=\"container mb-3\">\r\n        <textarea className=\"form-control\" placeholder=\"Leave a comment here\" id=\"Enter Your Text\" rows={8} value={inputVal} onChange={change}></textarea>\r\n      </div>\r\n      <button className=\"UpperCase\" onClick={convertToUpper}>Covert To Upper Case</button>\r\n      <button className=\"LowerCase\" onClick={convertToLower}>Covert To Lower Case</button>\r\n      <button className=\"ClearText\" onClick={clearText}> Clear Text </button>\r\n      <div className=\"container my-3\">\r\n        <h2> Your Text Summary</h2>\r\n        <p>{word} words, {lett} characters</p>\r\n      </div>\r\n      </>\r\n\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}