{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umend\\\\OneDrive\\\\Documents\\\\Tutorials\\\\myfirst\\\\src\\\\components\\\\Textform.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(prop) {\n  {/*const [inputVal,setInput] = useState('');     \r\n   const [word, wordCount] = useState(0);\r\n   const [lett, charCount]= useState(0);\r\n    const change = (event)=> {\r\n      //let val = event.target.value;\r\n      //setInput(val.toUpperCase());\r\n      let val = event.target.value\r\n      setInput(event.target.value);\r\n      \r\n      let result = val.split(' ').filter(word => word !== '').length;\r\n      wordCount(result);\r\n        let character = val.trim().length-result+1;\r\n      charCount(character);\r\n    }\r\n   const convertToUpper = ()=>{\r\n      setInput(inputVal.toUpperCase());\r\n   }\r\n    const convertToLower = ()=>{\r\n      setInput(inputVal.toLowerCase());        \r\n   }\r\n   const clearText = ()=>{\r\n      setInput('');   \r\n      wordCount(0);\r\n      charCount(0);\r\n   }*/}\n  const fontStyle = {\n    color: prop.mode === \"dark\" ? \"white\" : \"black\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: prop.mode === \"dark\" ? \"grey\" : \"black\"\n      },\n      children: prop.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        style: {\n          backgroundColor: prop.mode === \"dark\" ? \"white\" : \"grey\"\n        },\n        placeholder: \"Leave a comment here\",\n        id: \"Enter Your Text\",\n        rows: 8,\n        value: prop.inputVal,\n        onChange: prop.change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"UpperCase\",\n      onClick: prop.convertToUpper,\n      children: \"Covert To Upper Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LowerCase\",\n      onClick: prop.convertToLower,\n      children: \"Covert To Lower Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ClearText\",\n      onClick: prop.clearText,\n      children: \" Clear Text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: fontStyle,\n        children: \" Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: fontStyle,\n        children: [prop.word, \" words, \", prop.lett, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","prop","fontStyle","color","mode","children","style","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","backgroundColor","placeholder","id","rows","value","inputVal","onChange","change","onClick","convertToUpper","convertToLower","clearText","word","lett","_c","$RefreshReg$"],"sources":["C:/Users/umend/OneDrive/Documents/Tutorials/myfirst/src/components/Textform.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function TextForm(prop){\r\n    {/*const [inputVal,setInput] = useState('');     \r\n    const [word, wordCount] = useState(0);\r\n    const [lett, charCount]= useState(0);\r\n\r\n    const change = (event)=> {\r\n        //let val = event.target.value;\r\n        //setInput(val.toUpperCase());\r\n        let val = event.target.value\r\n        setInput(event.target.value);\r\n        \r\n        let result = val.split(' ').filter(word => word !== '').length;\r\n        wordCount(result);\r\n\r\n        let character = val.trim().length-result+1;\r\n        charCount(character);\r\n\r\n    }\r\n    const convertToUpper = ()=>{\r\n        setInput(inputVal.toUpperCase());\r\n    }\r\n\r\n    const convertToLower = ()=>{\r\n        setInput(inputVal.toLowerCase());        \r\n    }\r\n    const clearText = ()=>{\r\n        setInput('');   \r\n        wordCount(0);\r\n        charCount(0);\r\n    }*/}\r\n    const fontStyle = {color:prop.mode===\"dark\"?\"white\":\"black\"};\r\n    return(\r\n        <>\r\n        <h1 style={{color:prop.mode===\"dark\"?\"grey\":\"black\"}}>{prop.heading}</h1>\r\n        <div className=\"container mb-3\">\r\n        <textarea className=\"form-control\" style={{backgroundColor:prop.mode===\"dark\"?\"white\":\"grey\"}} placeholder=\"Leave a comment here\" id=\"Enter Your Text\" rows={8} value={prop.inputVal} onChange={prop.change}></textarea>\r\n      </div>\r\n      <button className=\"UpperCase\" onClick={prop.convertToUpper}>Covert To Upper Case</button>\r\n      <button className=\"LowerCase\" onClick={prop.convertToLower}>Covert To Lower Case</button>\r\n      <button className=\"ClearText\" onClick={prop.clearText}> Clear Text </button>\r\n      <div className=\"container my-3\">\r\n        <h2 style = {fontStyle}> Your Text Summary</h2>\r\n        <p style = {fontStyle}>{prop.word} words, {prop.lett} characters</p>\r\n      </div>\r\n      </>\r\n\r\n    );\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAC;EAClC,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAxBK;EA6BD,MAAMC,SAAS,GAAG;IAACC,KAAK,EAACF,IAAI,CAACG,IAAI,KAAG,MAAM,GAAC,OAAO,GAAC;EAAO,CAAC;EAC5D,oBACIP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACAR,OAAA;MAAIS,KAAK,EAAE;QAACH,KAAK,EAACF,IAAI,CAACG,IAAI,KAAG,MAAM,GAAC,MAAM,GAAC;MAAO,CAAE;MAAAC,QAAA,EAAEJ,IAAI,CAACM;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzEd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC/BR,OAAA;QAAUe,SAAS,EAAC,cAAc;QAACN,KAAK,EAAE;UAACO,eAAe,EAACZ,IAAI,CAACG,IAAI,KAAG,MAAM,GAAC,OAAO,GAAC;QAAM,CAAE;QAACU,WAAW,EAAC,sBAAsB;QAACC,EAAE,EAAC,iBAAiB;QAACC,IAAI,EAAE,CAAE;QAACC,KAAK,EAAEhB,IAAI,CAACiB,QAAS;QAACC,QAAQ,EAAElB,IAAI,CAACmB;MAAO;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrN,CAAC,eACNd,OAAA;MAAQe,SAAS,EAAC,WAAW;MAACS,OAAO,EAAEpB,IAAI,CAACqB,cAAe;MAAAjB,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzFd,OAAA;MAAQe,SAAS,EAAC,WAAW;MAACS,OAAO,EAAEpB,IAAI,CAACsB,cAAe;MAAAlB,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzFd,OAAA;MAAQe,SAAS,EAAC,WAAW;MAACS,OAAO,EAAEpB,IAAI,CAACuB,SAAU;MAAAnB,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5Ed,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAP,QAAA,gBAC7BR,OAAA;QAAIS,KAAK,EAAIJ,SAAU;QAAAG,QAAA,EAAC;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/Cd,OAAA;QAAGS,KAAK,EAAIJ,SAAU;QAAAG,QAAA,GAAEJ,IAAI,CAACwB,IAAI,EAAC,UAAQ,EAACxB,IAAI,CAACyB,IAAI,EAAC,aAAW;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA,eACJ,CAAC;AAGT;AAACgB,EAAA,GA/CuB3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}