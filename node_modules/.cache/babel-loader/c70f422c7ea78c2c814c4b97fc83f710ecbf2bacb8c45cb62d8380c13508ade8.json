{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umend\\\\OneDrive\\\\Documents\\\\Tutorials\\\\myfirst\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport NavBar from './components/Navbar';\nimport TextForm from './components/Textform';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\n//function myfunc(){\n//  const val = document.getElementById(\"txt\").value \n//  console.log(val)\n//}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //const myfunc = (event) => {\n  //event.preventDefault(); // Prevent the default form submission behavior\n  //console.log('Search button clicked'); // Log a message to the console\n  //};\n  //let name =\"Hello World\"\n\n  const [mode, setMode] = useState('dark');\n  const [text, setText] = useState('Enable Light Mode');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const onChange = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      setText('Enable Dark Mode');\n      document.body.style.backgroundColor = \"white\";\n      showAlert('Light Mode Initiated Successfully', 'success');\n    } else {\n      setMode('dark');\n      setText('Enable Light Mode');\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert('Dark Mode Initiated Successfully', 'success');\n    }\n  };\n  const [inputVal, setInput] = useState('');\n  const [word, wordCount] = useState(0);\n  const [lett, charCount] = useState(0);\n  const change = event => {\n    //let val = event.target.value;\n    //setInput(val.toUpperCase());\n    let val = event.target.value;\n    setInput(event.target.value);\n    let result = val.split(' ').filter(word => word !== '').length;\n    wordCount(result);\n    let character = val.trim().length - result + 1;\n    charCount(character);\n  };\n  const convertToUpper = () => {\n    setInput(inputVal.toUpperCase());\n    setAlert({\n      msg: \"Converted To Upper Case\",\n      type: \"success\"\n    });\n  };\n  const convertToLower = () => {\n    setInput(inputVal.toLowerCase());\n    setAlert({\n      msg: \"Converted To Lower Case\",\n      type: \"success\"\n    });\n  };\n  const clearText = () => {\n    setInput('');\n    wordCount(0);\n    charCount(0);\n    setAlert({\n      msg: \"All text are cleared\",\n      type: \"success\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        title: \"MyTextutil\",\n        mod: mode,\n        text: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        mode: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Operation Over Text\",\n              mode: mode,\n              inputVal: inputVal,\n              word: word,\n              lett: lett,\n              change: change,\n              clearText: clearText,\n              convertToLower: convertToLower,\n              convertToUpper: convertToUpper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FNocEqZz0AQzWWD28EBMgOUHDrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NavBar","TextForm","About","Alert","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","App","_s","mode","setMode","text","setText","alert","setAlert","showAlert","message","type","msg","setTimeout","onChange","document","body","style","backgroundColor","inputVal","setInput","word","wordCount","lett","charCount","change","event","val","target","value","result","split","filter","length","character","trim","convertToUpper","toUpperCase","convertToLower","toLowerCase","clearText","children","title","mod","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/umend/OneDrive/Documents/Tutorials/myfirst/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport NavBar from './components/Navbar';\nimport TextForm from './components/Textform';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n//function myfunc(){\n//  const val = document.getElementById(\"txt\").value \n//  console.log(val)\n//}\n\n\nfunction App() {\n  //const myfunc = (event) => {\n    //event.preventDefault(); // Prevent the default form submission behavior\n    //console.log('Search button clicked'); // Log a message to the console\n  //};\n  //let name =\"Hello World\"\n\n  const [mode, setMode] = useState('dark');\n  const [text, setText] = useState('Enable Light Mode');\n\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    },3000);\n  }\n\n  const onChange = ()=>{\n    if(mode==='dark'){\n      setMode('light');\n      setText('Enable Dark Mode');\n      document.body.style.backgroundColor=\"white\"; \n\n      showAlert('Light Mode Initiated Successfully','success');\n    }\n    else{\n      setMode('dark');\n      setText('Enable Light Mode');\n      document.body.style.backgroundColor=\"#042743\";\n      showAlert('Dark Mode Initiated Successfully','success');\n    }\n  }\n\n    const [inputVal,setInput] = useState('');     \n    const [word, wordCount] = useState(0);\n    const [lett, charCount]= useState(0);\n\n    const change = (event)=> {\n        //let val = event.target.value;\n        //setInput(val.toUpperCase());\n        let val = event.target.value\n        setInput(event.target.value);\n        \n        let result = val.split(' ').filter(word => word !== '').length;\n        wordCount(result);\n\n        let character = val.trim().length-result+1;\n        charCount(character);\n\n    }\n    const convertToUpper = ()=>{\n        setInput(inputVal.toUpperCase());\n        setAlert({\n          msg:\"Converted To Upper Case\",\n          type:\"success\"\n        })\n    }\n\n    const convertToLower = ()=>{\n        setInput(inputVal.toLowerCase());   \n        setAlert({\n          msg:\"Converted To Lower Case\",\n          type:\"success\"\n        });     \n    }\n    const clearText = ()=>{\n        setInput('');\n        wordCount(0);\n        charCount(0);\n\n        setAlert({\n          msg:\"All text are cleared\",\n          type:\"success\"\n        });\n    }\n  return(  \n    <div>\n    <Router>\n<NavBar title=\"MyTextutil\" mod={mode} text={text} onChange={onChange}/>\n<Alert mode={alert}></Alert>\n<div className=\"container\">\n<Routes>\n          <Route path=\"/about\" element={<About/>}/>\n          <Route path=\"/\" element={<TextForm heading=\"Operation Over Text\" mode={mode} inputVal={inputVal} word={word} lett={lett} change={change} clearText={clearText} convertToLower={convertToLower} convertToUpper={convertToUpper} />}>\n          </Route>\n  </Routes>\n{/*<TextForm heading=\"Operation Over Text\" mode={mode} inputVal={inputVal} word={word} lett={lett} change={change} clearText={clearText} convertToLower={convertToLower} convertToUpper={convertToUpper} />*/}\n{/**<About/>*/}\n</div>\n</Router>\n</div>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}