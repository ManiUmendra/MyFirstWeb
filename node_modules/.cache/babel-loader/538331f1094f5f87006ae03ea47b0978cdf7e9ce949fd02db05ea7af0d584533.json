{"ast":null,"code":"import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TextForm(prop){{/*const [inputVal,setInput] = useState('');     \r\n    const [word, wordCount] = useState(0);\r\n    const [lett, charCount]= useState(0);\r\n\r\n    const change = (event)=> {\r\n        //let val = event.target.value;\r\n        //setInput(val.toUpperCase());\r\n        let val = event.target.value\r\n        setInput(event.target.value);\r\n        \r\n        let result = val.split(' ').filter(word => word !== '').length;\r\n        wordCount(result);\r\n\r\n        let character = val.trim().length-result+1;\r\n        charCount(character);\r\n\r\n    }\r\n    const convertToUpper = ()=>{\r\n        setInput(inputVal.toUpperCase());\r\n    }\r\n\r\n    const convertToLower = ()=>{\r\n        setInput(inputVal.toLowerCase());        \r\n    }\r\n    const clearText = ()=>{\r\n        setInput('');   \r\n        wordCount(0);\r\n        charCount(0);\r\n    }*/}var fontStyle={color:prop.mode===\"dark\"?\"grey\":\"black\"};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{style:{color:prop.mode===\"dark\"?\"grey\":\"black\"},children:prop.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"container mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",style:{backgroundColor:prop.mode===\"dark\"?\"white\":\"grey\"},placeholder:\"Leave a comment here\",id:\"Enter Your Text\",rows:8,value:prop.inputVal,onChange:prop.change})}),/*#__PURE__*/_jsx(\"button\",{className:\"UpperCase\",onClick:prop.convertToUpper,children:\"Covert To Upper Case\"}),/*#__PURE__*/_jsx(\"button\",{className:\"LowerCase\",onClick:prop.convertToLower,children:\"Covert To Lower Case\"}),/*#__PURE__*/_jsx(\"button\",{className:\"ClearText\",onClick:prop.clearText,children:\" Clear Text \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-3\",children:[/*#__PURE__*/_jsx(\"h2\",{style:fontStyle,children:\" Your Text Summary\"}),/*#__PURE__*/_jsxs(\"p\",{style:fontStyle,children:[prop.word,\" words, \",prop.lett,\" characters\"]})]})]});}","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TextForm","prop","fontStyle","color","mode","children","style","heading","className","backgroundColor","placeholder","id","rows","value","inputVal","onChange","change","onClick","convertToUpper","convertToLower","clearText","word","lett"],"sources":["C:/Users/umend/OneDrive/Documents/Tutorials/myfirst/src/components/Textform.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function TextForm(prop){\r\n    {/*const [inputVal,setInput] = useState('');     \r\n    const [word, wordCount] = useState(0);\r\n    const [lett, charCount]= useState(0);\r\n\r\n    const change = (event)=> {\r\n        //let val = event.target.value;\r\n        //setInput(val.toUpperCase());\r\n        let val = event.target.value\r\n        setInput(event.target.value);\r\n        \r\n        let result = val.split(' ').filter(word => word !== '').length;\r\n        wordCount(result);\r\n\r\n        let character = val.trim().length-result+1;\r\n        charCount(character);\r\n\r\n    }\r\n    const convertToUpper = ()=>{\r\n        setInput(inputVal.toUpperCase());\r\n    }\r\n\r\n    const convertToLower = ()=>{\r\n        setInput(inputVal.toLowerCase());        \r\n    }\r\n    const clearText = ()=>{\r\n        setInput('');   \r\n        wordCount(0);\r\n        charCount(0);\r\n    }*/}\r\n    const fontStyle = {color:prop.mode===\"dark\"?\"grey\":\"black\"};\r\n    return(\r\n        <>\r\n        <h1 style={{color:prop.mode===\"dark\"?\"grey\":\"black\"}}>{prop.heading}</h1>\r\n        <div className=\"container mb-3\">\r\n        <textarea className=\"form-control\" style={{backgroundColor:prop.mode===\"dark\"?\"white\":\"grey\"}} placeholder=\"Leave a comment here\" id=\"Enter Your Text\" rows={8} value={prop.inputVal} onChange={prop.change}></textarea>\r\n      </div>\r\n      <button className=\"UpperCase\" onClick={prop.convertToUpper}>Covert To Upper Case</button>\r\n      <button className=\"LowerCase\" onClick={prop.convertToLower}>Covert To Lower Case</button>\r\n      <button className=\"ClearText\" onClick={prop.clearText}> Clear Text </button>\r\n      <div className=\"container my-3\">\r\n        <h2 style = {fontStyle}> Your Text Summary</h2>\r\n        <p style = {fontStyle}>{prop.word} words, {prop.lett} characters</p>\r\n      </div>\r\n      </>\r\n\r\n    );\r\n}"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEjC,cAAe,SAAS,CAAAC,QAAQA,CAACC,IAAI,CAAC,CAClC,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA5BK,CA6BD,GAAM,CAAAC,SAAS,CAAG,CAACC,KAAK,CAACF,IAAI,CAACG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAC3D,mBACIP,KAAA,CAAAE,SAAA,EAAAM,QAAA,eACAV,IAAA,OAAIW,KAAK,CAAE,CAACH,KAAK,CAACF,IAAI,CAACG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAE,CAAAC,QAAA,CAAEJ,IAAI,CAACM,OAAO,CAAK,CAAC,cACzEZ,IAAA,QAAKa,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAC/BV,IAAA,aAAUa,SAAS,CAAC,cAAc,CAACF,KAAK,CAAE,CAACG,eAAe,CAACR,IAAI,CAACG,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAE,CAACM,WAAW,CAAC,sBAAsB,CAACC,EAAE,CAAC,iBAAiB,CAACC,IAAI,CAAE,CAAE,CAACC,KAAK,CAAEZ,IAAI,CAACa,QAAS,CAACC,QAAQ,CAAEd,IAAI,CAACe,MAAO,CAAW,CAAC,CACrN,CAAC,cACNrB,IAAA,WAAQa,SAAS,CAAC,WAAW,CAACS,OAAO,CAAEhB,IAAI,CAACiB,cAAe,CAAAb,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACzFV,IAAA,WAAQa,SAAS,CAAC,WAAW,CAACS,OAAO,CAAEhB,IAAI,CAACkB,cAAe,CAAAd,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACzFV,IAAA,WAAQa,SAAS,CAAC,WAAW,CAACS,OAAO,CAAEhB,IAAI,CAACmB,SAAU,CAAAf,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC5ER,KAAA,QAAKW,SAAS,CAAC,gBAAgB,CAAAH,QAAA,eAC7BV,IAAA,OAAIW,KAAK,CAAIJ,SAAU,CAAAG,QAAA,CAAC,oBAAkB,CAAI,CAAC,cAC/CR,KAAA,MAAGS,KAAK,CAAIJ,SAAU,CAAAG,QAAA,EAAEJ,IAAI,CAACoB,IAAI,CAAC,UAAQ,CAACpB,IAAI,CAACqB,IAAI,CAAC,aAAW,EAAG,CAAC,EACjE,CAAC,EACJ,CAAC,CAGT"},"metadata":{},"sourceType":"module","externalDependencies":[]}